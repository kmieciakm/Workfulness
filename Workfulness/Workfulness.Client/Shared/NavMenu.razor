@inject IAuthenticationService authService;
@inject NavigationManager navigationManager;

<div class="top-row navbar navbar-dark">
    <a class="navbar-brand" href="">Workfulness</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                Home
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="explore" Match="NavLinkMatch.All">
                Explore
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="pomodoro" Match="NavLinkMatch.All">
                Pomodoro
            </NavLink>
        </li>
        <AuthorizeView>
            <Authorized>
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="todo" Match="NavLinkMatch.All">
                        ToDo
                    </NavLink>
                </li>
                <li class="nav-item px-3 pt-3">
                    <div class="nav-link btn btn-info p-2" @onclick="Logout">
                        Logout
                    </div>
                </li>
            </Authorized>
            <NotAuthorized>
                <li class="nav-item px-3 pt-3">
                    <div class="nav-link btn btn-info p-2" @onclick='() => { navigationManager.NavigateTo("auth/login"); }'>
                        Login
                    </div>
                </li>
                <li class="nav-item px-3">
                    <div class="nav-link btn btn-info p-2" @onclick='() => { navigationManager.NavigateTo("auth/register"); }'>
                        Register
                    </div>
                </li>
            </NotAuthorized>
        </AuthorizeView>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    protected override void OnInitialized()
    {
        navigationManager.LocationChanged += OnLocationChanged;
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void Logout()
    {
        authService.Logout();
        navigationManager.NavigateTo("/", forceLoad: true);
    }

    private void OnLocationChanged(object sender, EventArgs eventArgs)
    {
        StateHasChanged();
    }
}
