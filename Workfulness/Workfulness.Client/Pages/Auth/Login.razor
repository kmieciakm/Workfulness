@page "/auth/login"
@inject IAuthenticationService authService;
@inject NavigationManager navigationManager;

<div class="background mt-4 p-4">
    <h3>Login</h3>
    <EditForm Model="_LoginRequest" OnValidSubmit="LoginSubmit">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label for="InputEmail">Email address</label>
            <InputText @bind-Value="_LoginRequest.Email" type="email" class="form-control" id="InputEmail" aria-describedby="emailHelp" placeholder="Enter email"></InputText>
            <ValidationMessage For="(()=>_LoginRequest.Email)" /></div>
        <div class="form-group">
            <label for="InputPassword">Password</label>
            <InputText @bind-Value="_LoginRequest.Password" type="password" class="form-control" id="InputPassword" placeholder="Password"></InputText>
            <ValidationMessage For="(()=>_LoginRequest.Password)" />
        </div>

        @if (ShowLoginErrors)
        {
            <div class="alert alert-danger" role="alert">
                <ul>
                    @foreach (var error in Errors)
                    {
                        <li>@error</li>
                    }
                </ul>
            </div>
        }

        @if (IsProcessing)
        {
            <button type="submit" class="btn btn-dark" disabled>Submit</button>
        }
        else
        {
            <button type="submit" class="btn btn-success">Submit</button>
        }
    </EditForm>
</div>

@code {
    private LoginRequest _LoginRequest { get; } = new LoginRequest();
    public bool IsProcessing { get; set; } = false;
    public bool ShowLoginErrors { get; set; }
    public List<string> Errors { get; set; } = new List<string>();

    private async Task LoginSubmit()
    {
        IsProcessing = true;
        ShowLoginErrors = false;
        try
        {
            await authService.LoginUser(_LoginRequest);
            navigationManager.NavigateTo("/explore", forceLoad: true);
        }
        catch (AuthenticationException ex)
        {
            Errors.Add(ex.Message);
            ShowLoginErrors = true;
        }
        catch (Exception)
        {
            Errors.Add("Ups! Something goes wrong. Please try again in a minute.");
            ShowLoginErrors = true;
        }
        finally
        {
            IsProcessing = false;
        }
    }
}